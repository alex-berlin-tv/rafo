{% extends "base.html.jinja2" %}
{% block content %}
<div class="content" x-data="data()" x-init="fetch_data()">
    <div class="notification is-warning" x-show="!data_loaded && !fetch_error">
        Bitte warten, die Daten werden geladen...
    </div>
    <div :class="['modal', success ? 'is-active' : '']" x-show="true">
        <div class="modal-background" @click="success=false"></div>
        <div class="modal-content">
            <div class="notification is-primary">
                <p><b>Upload erfolgreich abgeschlossen</b></p>
                <p>Wir haben deine Sendung erhalten, vielen Dank!</p>
            </div>
        </div>
        <button class="modal-close is-large" aria-label="close" @click="success=false"></button>
    </div>
    <template x-if="fetch_error">
        <div class="notification is-danger" x-show="fetch_error">
            <p><b>Formular konnte nicht geladen werden (Fehler <span x-text="fetch_error.status"></span>)</b>
            </p>
            <p>Unter dieser URL kann kein Formular gefunden werden. Stelle bitte sicher, dass du den Link
                korrekt
                kopiert hast und probiere es nochmals. Wenn das Problem fortbesteht und du dir sicher bist, dass
                du den
                korrekten Link verwendest, melde dich bitte unter <a
                    href="mailto:sendeabwicklung@alex-berlin.de">sendeabwicklung@alex-berlin.de</a>. Bitte
                kopiere in
                diese Nachricht die komplette Fehlermeldung (alles aus der roten Box), damit wir dir helfen
                können.</p>
            <p class="is-size-7">Fehlergrund: <span x-text="fetch_error_detail"></span>. Id: <span
                    x-text="producer_uuid"></span>.</p>
        </div>
    </template>

    <div x-show="data_loaded && !fetch_error">
        <h1>Uploadformular</h1>
        <form id="form" enctype="multipart/form-data" @submit="upload()">
            <template x-if="dev_mode">
                <div class="field">
                    <div class="control">
                        <button class="button is-link is-light" @click="test_fill()">Testdaten</button>
                    </div>
                </div>
            </template>
            <div class="field">
                <label class="label" for="producer">Sendeverantwortlich</label>
                <div class="control has-icons-left">
                    <input class="input" id="producer" name="producer" type="text" x-model="producer_name" disabled>
                    <span class="icon is-small is-left"><i class="fa-regular fa-user"></i></span>
                </div>
                <p class="help">Der Uploadlink ist für dich personalisiert.</p>
            </div>
            <div class="field">
                <label class="label" for="show">Format</label>
                <div class="control has-icons-left">
                    <div class="select">
                        <select x-model="show" id="show" name="show" required :disabled="upload_running">
                            <template x-if="available_shows.length > 1">
                                <option disabled selected value="">Format auswählen</option>
                            </template>
                            <template x-for="show in available_shows">
                                <option :value="show.uuid" x-text="show.name"></option>
                            </template>
                            <p class="help">Wähle bitte das Format aus.</p>
                        </select>
                    </div>
                    <div class="icon is-small is-left"><i class="fa-solid fa-tower-broadcast"></i></div>
                </div>
            </div>
            <div class="field">
                <label class="label" for="datetime">Geplantes Sendedatum- und Zeit</label>
                <div class="control has-icons-left">
                    <input class="input" id="datetime" name="datetime" type="datetime-local" x-model="datetime" required
                        :disabled="upload_running">
                    <div class="icon is-small is-left"><i class="fa-solid fa-file"></i></div>
                </div>
                <p class="help">Wann wird deine Sendung gemäss Vereinbarung mit der Sendeabwicklung ausgestrahlt
                    werden?
                    <i>Pflichtfeld.</i>
                </p>
            </div>
            <div class="field">
                <label class="label" for="title">Sendungstitel</label>
                <div class="control has-icons-left">
                    <input class="input" id="title" name="title" type="text" x-model="title" minlength="10"
                        maxlength="200" required :disabled="upload_running">
                    <div class="icon is-small is-left"><i class="fa-solid fa-file"></i></div>
                </div>
                <p class="help">Der Titel deiner Episode. <i>Pflichtfeld, zwischen 10 und 200 Zeichen lang.</i>
                </p>
            </div>
            <div class="field">
                <label class="label" for="description">Beschreibung</label>
                <div class="control">
                    <textarea class="textarea" id="description" name="description" type="text" x-model="description"
                        minlength="10" maxlength="1000" required :disabled="upload_running"></textarea>
                </div>
                <p class="help">Beschreibe den Inhalt deiner Sendung. <i>Pflichtfeld, mindestens 10 Zeichen
                        lang.</i>
                </p>
            </div>
            <div class="field">
                <label class="label" for="description">Datei</label>
                <div class="file has-name is-small is-fullwidth">
                    <label class="file-label">
                        <input class="file-input" id="file" name="file" type="file" x-model="file" accept=".mp3,.wav"
                            required :disabled="upload_running" />
                        <span class="file-cta">
                            <span class="file-icon is-small">
                                <i class="fas fa-upload"></i>
                            </span>
                            <span class="file-label">Datei auswählen</span>
                        </span>
                        <span class="file-name" x-text="get_file_name(file)"></span>
                    </label>
                </div>
                <p class="help">Lade hier das Audiofile deiner Sendung hoch. <i>Pflichtfeld.</i></p>
            </div>
            <div class="field mb-5">
                <label class="label" for="comment">Kommentar</label>
                <div class="control">
                    <textarea class="textarea" id="comment" name="comment" type="text" x-model="comment"
                        maxlength="1000" :disabled="upload_running"></textarea>
                </div>
                <p class="help">Optionaler Kommentar.</p>
            </div>
            <div class="field mb-5" x-show="upload_running">
                <p class="label">Bitte warten, Upload läuft...</p>
                <progress class="progress is-primary" :value="upload_progress" max="100"
                    x-text="`${upload_progress}%`"></progress>
                <p x-show="wait_for_server">Daten werden auf dem Server verarbeitet...</p>
            </div>
            <div class="field is-grouped">
                <div class="control">
                    <input class="button is-link" type="submit" />
                </div>
                <div class="control">
                    <button class="button is-link is-light" @click="reset()">Zurücksetzen</button>
                </div>
            </div>
        </form>
    </div>
</div>
{% endblock %}
{% block script_footer %}
<script>
    function data() {
        return {
            data_loaded: false,
            fetch_error: null,
            fetch_error_detail: "",
            producer_name: "",
            producer_uuid: "{{producer_uuid}}",
            show: null,
            available_shows: {},
            datetime: {},
            title: null,
            description: null,
            file: null,
            comment: "",
            form_data: {
                producer: "{{producer_uuid}}",
                show: null,
            },
            success: false,
            dev_mode: "{{dev_mode}}",
            upload_running: false,
            upload_progress: 0,
            wait_for_server: false,
            fetch_data() {
                fetch(`../api/producer_for_upload/${this.producer_uuid}`)
                    .then(res => {
                        if (!res.ok) {
                            this.fetch_error = res;
                        }
                        return res.json();
                    })
                    .then(data => {
                        if (this.fetch_error === null) {
                            this.data_loaded = true;
                            this.producer_name = data.producer_name;
                            this.available_shows = data.shows;
                        }
                        else if ("detail" in data) {
                            this.fetch_error_detail = data.detail;
                        }
                    });
            },
            get_file_name(path) {
                if (path === null) {
                    return "";
                }
                const segments = path.split("\\");
                if (segments.length === 0) {
                    return "";
                }
                return segments[segments.length - 1];
            },
            upload() {
                event.preventDefault();
                const form = document.getElementById("form");

                const xhr = new XMLHttpRequest();
                var data = new FormData(form);
                data.append("producer", this.producer_uuid);

                xhr.upload.addEventListener("progress", (e) => {
                    this.upload_progress = (e.loaded / e.total) * 100;
                    if (this.upload_progress === 100) {
                        this.wait_for_server = true;
                    }
                });
                xhr.onreadystatechange = () => {
                    if (xhr.readyState === 1) {
                        this.upload_running = true;
                    }
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        this.reset();
                        this.success = JSON.parse(xhr.response).success;
                        this.upload_running = false;
                        this.upload_progress = 0;
                        this.wait_for_server = false;
                        window.scrollTo(0, 0);
                    }
                };
                xhr.open("POST", `../api/upload/${this.producer_uuid}`, true);
                const file_name = data.get("file").name.replace(/[^\x00-\x7F]/g, "");
                xhr.setRequestHeader("file_name", file_name);
                xhr.send(data);
            },
            reset() {
                this.datetime = {};
                this.title = "";
                this.description = "";
                this.file = null;
                this.comment = "";
            },
            test_fill() {
                this.datetime = "2023-08-01T10:00";
                this.title = "Ein Testeintrag";
                this.description = "Heute ist ein wunderschöner Tag, die Sonne scheint hell am Himmel und die Vögel zwitschern fröhlich. Doch gleichzeitig liegt eine düstere Stimmung in der Luft, als ob etwas Schreckliches passieren wird.";
                this.file = null;
                this.comment = "Die Natur zeigt sich von ihrer besten Seite, mit blühenden Blumen und saftigem Grün. Aber zugleich sehe ich die zerstörerischen Auswirkungen des Klimawandels, wie Waldbrände und schmelzende Gletscher, die mich verzweifeln lassen.";
            },
        }
    }
</script>
{% endblock %}